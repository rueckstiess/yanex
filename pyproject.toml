[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "yanex"
version = "0.3.0"
description = "Yet Another Experiment Tracker - A lightweight experiment tracking harness"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Thomas", email = "from+gitgub@tomr.au"}
]
keywords = ["experiment", "tracking", "machine-learning", "research", "reproducibility"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "rich>=12.0.0",
    "gitpython>=3.1.0",
    "dateparser>=1.1.0",
    "textual>=0.45.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
matplotlib = ["matplotlib>=3.5.0"]

[project.scripts]
yanex = "yanex.cli.main:cli"

[project.urls]
Homepage = "https://github.com/rueckstiess/yanex"
Repository = "https://github.com/rueckstiess/yanex"
Documentation = "https://github.com/rueckstiess/yanex/blob/main/docs/README.md"
Issues = "https://github.com/rueckstiess/yanex/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=yanex",
    "--cov-report=html",
    "--cov-report=term-missing",
    "-v"
]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err`
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true